name: Release Tag

on:
  push:
    tags:
      - v*

jobs:
  release_desktop:
    name: Release Linux, Windows, and macOS
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        c_compiler: [ gcc, clang, cl ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc

    steps:
      - uses: actions/checkout@v3

      - name: Install Ubuntu dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update && \
          sudo apt install -y libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev
          wget https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip -O ninja-linux.zip && \
            sudo unzip ninja-linux.zip -d /usr/bin && \
            sudo rm ninja-linux.zip

      - name: Configure CMake on Linux
        if: matrix.os == 'ubuntu-latest'
        run: >
          cmake -B build
          -G Ninja
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=Release
          -DGRAPHICS=GRAPHICS_API_OPENGL_ES2
          -DBUILD_TESTS=OFF
          -S ${{ github.workspace }}
      - name: Configure CMake on Windows
        if: matrix.os == 'windows-latest'
        run: >
          cmake -E env CXXFLAGS="/MP"
          cmake -B build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=Release
          -DGRAPHICS=GRAPHICS_API_OPENGL_ES2
          -DBUILD_TESTS=OFF
          -S ${{ github.workspace }}
      - name: Configure CMake on macOS
        if: matrix.os == 'macos-latest'
        run: >
          cmake -B build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=Release
          -DGRAPHICS=GRAPHICS_API_OPENGL_ES2
          -DBUILD_TESTS=OFF
          -S ${{ github.workspace }}

      - name: Build
        timeout-minutes: 10
        run: cmake --build build --config Release

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: missiletoad-${{ matrix.os }}-${{ matrix.c_compiler }}-${{ github.ref_name }}
          path: build/bin/missiletoad-*

  release_switch:
    name: Release Switch
    runs-on: ubuntu-latest
    container:
      image: devkitpro/devkita64
    steps:
      - uses: actions/checkout@v3
      - name: Install newest CMake
        # https://github.com/Kitware/CMake/releases/download/v3.27.3/cmake-3.27.3-linux-x86_64.sh
        run: |
          wget -q "https://github.com/Kitware/CMake/releases/download/v3.27.3/cmake-3.27.3-linux-x86_64.sh"
          chmod +x cmake-3.27.3-linux-x86_64.sh
          sudo ./cmake-3.27.3-linux-x86_64.sh --skip-license --prefix=/usr

      - name: Configure CMake
        run: >
          cmake -B build
          -DCMAKE_TOOLCHAIN_FILE=/opt/devkitpro/cmake/Switch.cmake
          -DCMAKE_BUILD_TYPE=Release
          -DPLATFORM="Nintendo Switch"
          -DDCMAKE_CXX_FLAGS="-fexceptions"
          -DBUILD_TESTS=OFF
          -G "Unix Makefiles"
          -S .

      - name: Build
        timeout-minutes: 10
        run: cmake --build build --config Debug -j 5

      - name: Publish Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: missiletoad-switch-${{ github.ref_name }}
          path: build/bin/missiletoad-*
